#!/bin/bash

if [[ "$KILLSWITCH" != "enabled" ]]; then
  [[ "$1" = "status" ]] && echo "disabled by environment variable"
  exit
fi

status_file="/var/tmp/killswitch_status.txt"
ip_file="/var/tmp/killswitch_last_ip.txt"
tstamp_file="/var/tmp/killswitch_last_tstamp.txt"

[[ -e "$status_file" ]] && killswitch="$(head -1 $status_file)" || echo "$KILLSWITCH" > "$status_file"

if [[ "$1" = "status" ]]; then
  if [[ "$killswitch" = "enabled" ]]; then
    echo "killswitch is enabled."
    echo -n "killswitch IP: "
    [[ -e "$ip_file" ]] && echo "$(cat $ip_file)" || echo "not created"
  else
    echo "killswitch is disabled."
  fi
  [[ -e "$tstamp_file" ]] && last_run="$(head -1 $tstamp_file)"
  echo -n "last run: "
  [[ -v last_run ]] && echo "$(($(date +%s)-$last_run)) seconds ago." || echo "never."
  echo "current IP: $(curl -s http://ipinfo.io/ip)"
  exit
fi

if [[ "$1" = "enable" ]]; then
  echo "enabled" > "$status_file"
  exit
fi

if [[ "$1" = "disable" ]]; then
  echo "disabled" > "$status_file"
  exit
fi

# Function to check IP change and drop connections
check_and_drop() {
    # Read the last known IP
    if [ -f "$ip_file" ]; then
        last_ip=$(cat "$ip_file")
    else
        last_ip=""
    fi

    # Compare last known IP with current IP
    current_ip=$(curl -s http://ipinfo.io/ip)
    if [[ "$last_ip" != "$current_ip" ]]; then
        # Save new IP to the file
        echo "$current_ip" > "$ip_file"
        if [[ "$last_ip" != "" ]]; then
            # Drop connections if this isn't the first run
            echo "$(date): IP changed - Dropping all connections."
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
        fi
    fi
}

# Main loop that runs for about 60 seconds
end=$((SECONDS+60))
while [ "$SECONDS" -lt "$end" ]; do
    killswitch="$(head -1 $status_file)"
    [ "$killswitch" != "enabled" ] && continue
    check_and_drop
    echo "$(date +%s)" > "$tstamp_file"
    sleep 4
done
