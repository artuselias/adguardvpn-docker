#!/bin/bash
#set -x
source /functions.sh

if [[ "$(read_var CREATED $VAR_STORE)" != "yes" ]]; then
  write_var "CREATED" "yes"
  adguardvpn-cli config set-no-routes off
  adguardvpn-cli config set-system-dns off
  if [[ -v ADGUARD_SEND_REPORTS ]]; then
    adguardvpn-cli config send-reports "$ADGUARD_SEND_REPORTS"
  else
    adguardvpn-cli config send-reports off
  fi

  if [[ -v ADGUARD_USERNAME && -v ADGUARD_PASSWORD ]]; then
    adguardvpn-cli login -u "$ADGUARD_USERNAME" -p "$ADGUARD_PASSWORD"
  fi
fi

if [[ $(adguardvpn-cli status | head -n 1) != "VPN is disconnected" ]]; then
  adguardvpn-cli disconnect
  sleep 5
  if [[ $(adguardvpn-cli status | head -n 1) != "VPN is disconnected" ]]; then
    echo "NOT DISCONNECTED AFTER DISCONNECT - THIS SHOULD NOT HAPPEN!!!"
    docker stop $(hostname)
  fi
fi

HOST_IP=$(get_ip)
write_var "HOST_IP" "$HOST_IP"

if [[ -v ADGUARD_LOCATION ]]; then
  adguardvpn-cli connect -l "$ADGUARD_LOCATION" &
else
  adguardvpn-cli connect -f &
fi

sleep 5

if [[ ! $(adguardvpn-cli status | head -n 1) =~ ^Connected\ to\ .* ]]; then
  echo "Unable to connect to VPN, restarting..."
  sleep 5
  docker restart $(hostname)
fi

VPN_IP=$(get_ip)
write_var "VPN_IP" "$VPN_IP"

if [[ "$HOST_IP" == "$VPN_IP" ]]; then
  echo "HOST_IP == VPN_IP THIS SHOULD NOT HAPPEN!!!"
  docker stop $(hostname)
fi

(sleep 3 && /cronjob) &
